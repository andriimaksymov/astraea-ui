import{j as e}from"./jsx-runtime-BnIj46N_.js";import{a}from"./Tooltip-vWLCKAu7.js";import"./index-CsdIBAqE.js";import"./index-5f0m1pej.js";import"./Radio-B8ygnOKm.js";import{S as l}from"./Stack-D1kKokOu.js";import"./Typography-DI-SgLTX.js";import"./clsx-B-dksMZM.js";import"./extends-CCbyfPlC.js";import"./index-MS7LKRHD.js";const N={title:"Checkbox",component:a,tags:["autodocs"],parameters:{docs:{description:{component:"Checkboxes allow the user to select one or more items from a set."}}}},n=t=>e.jsxs(l,{justify:"center",spacing:1,children:[e.jsx(a,{...t,defaultChecked:!0}),e.jsx(a,{...t}),e.jsx(a,{...t,disabled:!0}),e.jsx(a,{...t,disabled:!0,checked:!0})]}),o=t=>e.jsx(l,{justify:"center",children:e.jsxs(l,{spacing:1,direction:"column",children:[e.jsx(a,{defaultChecked:!0,label:"Label",...t}),e.jsx(a,{label:"Disabled",disabled:!0,...t})]})}),s=t=>e.jsxs(l,{spacing:4,justify:"center",children:[e.jsx(a,{label:"Top",labelPlacement:"top",...t}),e.jsx(a,{label:"Start",labelPlacement:"start",...t}),e.jsx(a,{label:"Bottom",labelPlacement:"bottom",...t}),e.jsx(a,{label:"End",labelPlacement:"end",...t})]});n.__docgenInfo={description:"",methods:[],displayName:"BasicCheckboxes",props:{className:{required:!1,tsType:{name:"string"},description:"Override or extend the style applied to the component."},checkedIcon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is checked."},label:{required:!1,tsType:{name:"ReactNode"},description:"A text or an element to be used in an enclosing label element."},labelPlacement:{required:!1,tsType:{name:"union",raw:'"top" | "start" | "bottom" | "end"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"start"'},{name:"literal",value:'"bottom"'},{name:"literal",value:'"end"'}]},description:`The position of the label.
@default 'end'`},icon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is unchecked."}}};o.__docgenInfo={description:"You can provide a label to the Checkbox",methods:[],displayName:"Label",props:{className:{required:!1,tsType:{name:"string"},description:"Override or extend the style applied to the component."},checkedIcon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is checked."},label:{required:!1,tsType:{name:"ReactNode"},description:"A text or an element to be used in an enclosing label element."},labelPlacement:{required:!1,tsType:{name:"union",raw:'"top" | "start" | "bottom" | "end"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"start"'},{name:"literal",value:'"bottom"'},{name:"literal",value:'"end"'}]},description:`The position of the label.
@default 'end'`},icon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is unchecked."}}};s.__docgenInfo={description:"You can change the placement of the label.",methods:[],displayName:"LabelPlacement",props:{className:{required:!1,tsType:{name:"string"},description:"Override or extend the style applied to the component."},checkedIcon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is checked."},label:{required:!1,tsType:{name:"ReactNode"},description:"A text or an element to be used in an enclosing label element."},labelPlacement:{required:!1,tsType:{name:"union",raw:'"top" | "start" | "bottom" | "end"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"start"'},{name:"literal",value:'"bottom"'},{name:"literal",value:'"end"'}]},description:`The position of the label.
@default 'end'`},icon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is unchecked."}}};var c,r,i;n.parameters={...n.parameters,docs:{...(c=n.parameters)==null?void 0:c.docs,source:{originalSource:`(args: CheckboxProps) => <Stack justify="center" spacing={1}>
    <Checkbox {...args} defaultChecked />
    <Checkbox {...args} />
    <Checkbox {...args} disabled />
    <Checkbox {...args} disabled checked />
  </Stack>`,...(i=(r=n.parameters)==null?void 0:r.docs)==null?void 0:i.source}}};var d,p,m,b,u;o.parameters={...o.parameters,docs:{...(d=o.parameters)==null?void 0:d.docs,source:{originalSource:`(args: CheckboxProps) => <Stack justify="center">
    <Stack spacing={1} direction="column">
      <Checkbox defaultChecked label="Label" {...args} />
      <Checkbox label="Disabled" disabled {...args} />
    </Stack>
  </Stack>`,...(m=(p=o.parameters)==null?void 0:p.docs)==null?void 0:m.source},description:{story:"You can provide a label to the Checkbox",...(u=(b=o.parameters)==null?void 0:b.docs)==null?void 0:u.description}}};var h,k,x,f,y;s.parameters={...s.parameters,docs:{...(h=s.parameters)==null?void 0:h.docs,source:{originalSource:`(args: CheckboxProps) => <Stack spacing={4} justify="center">
    <Checkbox label="Top" labelPlacement="top" {...args} />
    <Checkbox label="Start" labelPlacement="start" {...args} />
    <Checkbox label="Bottom" labelPlacement="bottom" {...args} />
    <Checkbox label="End" labelPlacement="end" {...args} />
  </Stack>`,...(x=(k=s.parameters)==null?void 0:k.docs)==null?void 0:x.source},description:{story:"You can change the placement of the label.",...(y=(f=s.parameters)==null?void 0:f.docs)==null?void 0:y.description}}};const _=["BasicCheckboxes","Label","LabelPlacement"];export{n as BasicCheckboxes,o as Label,s as LabelPlacement,_ as __namedExportsOrder,N as default};
