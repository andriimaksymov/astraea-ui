import{j as e}from"./clsx-BKsCbDk3.js";import{C as a}from"./Typography-CcctG2ic.js";import{S as o}from"./Stack-ClTUsl4F.js";import"./Card-DO5sIWGE.js";import"./index-CsdIBAqE.js";import"./index-5f0m1pej.js";const j={title:"Checkbox",component:a,argTypes:{label:{control:{type:"text"}}}},l=t=>e.jsxs(o,{justify:"center",spacing:1,children:[e.jsx(a,{...t,defaultChecked:!0}),e.jsx(a,{...t}),e.jsx(a,{...t,disabled:!0}),e.jsx(a,{...t,disabled:!0,checked:!0})]}),n=t=>e.jsx(o,{justify:"center",children:e.jsxs(o,{spacing:1,direction:"column",children:[e.jsx(a,{defaultChecked:!0,label:"Label",...t}),e.jsx(a,{label:"Disabled",disabled:!0,...t})]})}),s=t=>e.jsxs(o,{spacing:4,justify:"center",children:[e.jsx(a,{label:"Top",labelPlacement:"top",...t}),e.jsx(a,{label:"Start",labelPlacement:"start",...t}),e.jsx(a,{label:"Bottom",labelPlacement:"bottom",...t}),e.jsx(a,{label:"End",labelPlacement:"end",...t})]});l.__docgenInfo={description:"",methods:[],displayName:"Basic",props:{className:{required:!1,tsType:{name:"string"},description:"Override or extend the style applied to the component."},checkedIcon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is checked."},label:{required:!1,tsType:{name:"ReactNode"},description:"A text or an element to be used in an enclosing label element."},labelPlacement:{required:!1,tsType:{name:"union",raw:'"top" | "start" | "bottom" | "end"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"start"'},{name:"literal",value:'"bottom"'},{name:"literal",value:'"end"'}]},description:`The position of the label.
@default 'end'`},icon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is unchecked."}}};n.__docgenInfo={description:"",methods:[],displayName:"Label",props:{className:{required:!1,tsType:{name:"string"},description:"Override or extend the style applied to the component."},checkedIcon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is checked."},label:{required:!1,tsType:{name:"ReactNode"},description:"A text or an element to be used in an enclosing label element."},labelPlacement:{required:!1,tsType:{name:"union",raw:'"top" | "start" | "bottom" | "end"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"start"'},{name:"literal",value:'"bottom"'},{name:"literal",value:'"end"'}]},description:`The position of the label.
@default 'end'`},icon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is unchecked."}}};s.__docgenInfo={description:"",methods:[],displayName:"LabelPlacement",props:{className:{required:!1,tsType:{name:"string"},description:"Override or extend the style applied to the component."},checkedIcon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is checked."},label:{required:!1,tsType:{name:"ReactNode"},description:"A text or an element to be used in an enclosing label element."},labelPlacement:{required:!1,tsType:{name:"union",raw:'"top" | "start" | "bottom" | "end"',elements:[{name:"literal",value:'"top"'},{name:"literal",value:'"start"'},{name:"literal",value:'"bottom"'},{name:"literal",value:'"end"'}]},description:`The position of the label.
@default 'end'`},icon:{required:!1,tsType:{name:"ElementType"},description:"Icon to be used if checkbox is unchecked."}}};var r,c,i;l.parameters={...l.parameters,docs:{...(r=l.parameters)==null?void 0:r.docs,source:{originalSource:`(args: CheckboxProps) => <Stack justify="center" spacing={1}>
    <Checkbox {...args} defaultChecked />
    <Checkbox {...args} />
    <Checkbox {...args} disabled />
    <Checkbox {...args} disabled checked />
  </Stack>`,...(i=(c=l.parameters)==null?void 0:c.docs)==null?void 0:i.source}}};var d,m,p;n.parameters={...n.parameters,docs:{...(d=n.parameters)==null?void 0:d.docs,source:{originalSource:`(args: CheckboxProps) => <Stack justify="center">
    <Stack spacing={1} direction="column">
      <Checkbox defaultChecked label="Label" {...args} />
      <Checkbox label="Disabled" disabled {...args} />
    </Stack>
  </Stack>`,...(p=(m=n.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};var b,u,h;s.parameters={...s.parameters,docs:{...(b=s.parameters)==null?void 0:b.docs,source:{originalSource:`(args: CheckboxProps) => <Stack spacing={4} justify="center">
    <Checkbox label="Top" labelPlacement="top" {...args} />
    <Checkbox label="Start" labelPlacement="start" {...args} />
    <Checkbox label="Bottom" labelPlacement="bottom" {...args} />
    <Checkbox label="End" labelPlacement="end" {...args} />
  </Stack>`,...(h=(u=s.parameters)==null?void 0:u.docs)==null?void 0:h.source}}};const C=["Basic","Label","LabelPlacement"];export{l as Basic,n as Label,s as LabelPlacement,C as __namedExportsOrder,j as default};
